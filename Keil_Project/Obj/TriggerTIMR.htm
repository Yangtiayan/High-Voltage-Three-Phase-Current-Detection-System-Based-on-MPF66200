<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\TriggerTIMR.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\TriggerTIMR.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Apr 30 18:29:14 2024
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ADC_Init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[7]">TIMR0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">TIMR0_Handler</a><BR>
 <LI><a href="#[8]">CORDIC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">CORDIC_Handler</a><BR>
 <LI><a href="#[9]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UART1_Handler</a><BR>
 <LI><a href="#[a]">PWM1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PWM1_Handler</a><BR>
 <LI><a href="#[b]">TIMR1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">TIMR1_Handler</a><BR>
 <LI><a href="#[c]">HALL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">HALL_Handler</a><BR>
 <LI><a href="#[d]">PWM0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">PWM0_Handler</a><BR>
 <LI><a href="#[e]">BOD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">BOD_Handler</a><BR>
 <LI><a href="#[f]">PWMBRK_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PWMBRK_Handler</a><BR>
 <LI><a href="#[10]">WDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">WDT_Handler</a><BR>
 <LI><a href="#[11]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">I2C0_Handler</a><BR>
 <LI><a href="#[12]">XTALSTOP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">XTALSTOP_Handler</a><BR>
 <LI><a href="#[14]">ACMP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">ACMP_Handler</a><BR>
 <LI><a href="#[15]">BTIMR0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">BTIMR0_Handler</a><BR>
 <LI><a href="#[16]">BTIMR1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">BTIMR1_Handler</a><BR>
 <LI><a href="#[17]">BTIMR2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">BTIMR2_Handler</a><BR>
 <LI><a href="#[18]">BTIMR3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">BTIMR3_Handler</a><BR>
 <LI><a href="#[19]">GPIOA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">GPIOA_Handler</a><BR>
 <LI><a href="#[1a]">GPIOB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">GPIOB_Handler</a><BR>
 <LI><a href="#[1b]">GPIOM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">GPIOM_Handler</a><BR>
 <LI><a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a><BR>
 <LI><a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a><BR>
 <LI><a href="#[1e]">GPIOA2_GPIOM2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">GPIOA2_GPIOM2_Handler</a><BR>
 <LI><a href="#[1f]">GPIOA3_GPIOM3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">GPIOA3_GPIOM3_Handler</a><BR>
 <LI><a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a><BR>
 <LI><a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a><BR>
 <LI><a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a><BR>
 <LI><a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a><BR>
 <LI><a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ACMP_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[13]">ADC0_Handler</a> from main.o(.text) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[e]">BOD_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[15]">BTIMR0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[16]">BTIMR1_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[17]">BTIMR2_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[18]">BTIMR3_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[8]">CORDIC_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1e]">GPIOA2_GPIOM2_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1f]">GPIOA3_GPIOM3_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[19]">GPIOA_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1a]">GPIOB_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1b]">GPIOM_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[c]">HALL_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[11]">I2C0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[d]">PWM0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[a]">PWM1_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[f]">PWMBRK_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[7]">TIMR0_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[b]">TIMR1_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[6]">UART0_Handler</a> from main.o(.text) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[9]">UART1_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[10]">WDT_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[12]">XTALSTOP_Handler</a> from startup_mpf662xx.o(RESET) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mpf662xx.o(RESET)
 <LI><a href="#[26]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>__Vectors_End</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>TIMR0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>CORDIC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORDIC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORDIC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PWM1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMR1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>HALL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PWM0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BOD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PWMBRK_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBRK_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBRK_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>XTALSTOP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XTALSTOP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XTALSTOP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ACMP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>BTIMR0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>BTIMR1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BTIMR2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BTIMR3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>GPIOA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPIOB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPIOM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPIOA0_GPIOM0_SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_GPIOM0_SPI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_GPIOM0_SPI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPIOA1_GPIOM1_MPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_GPIOM1_MPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_GPIOM1_MPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPIOA2_GPIOM2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_GPIOM2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_GPIOM2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPIOA3_GPIOM3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_GPIOM3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_GPIOM3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIOB0_GPIOA8_TIMR2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_GPIOA8_TIMR2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_GPIOA8_TIMR2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIOB1_GPIOA9_DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_GPIOA9_DMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_GPIOA9_DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIOB2_GPIOA10_CAN0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_GPIOA10_CAN0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_GPIOA10_CAN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIOB3_GPIOA11_SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_GPIOA11_SPI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_GPIOA11_SPI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIOB4_GPIOB10_QEI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mpf662xx.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_GPIOB10_QEI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_GPIOB10_QEI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[70]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[73]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[74]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[75]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[76]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[77]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2a]"></a>UART_SendByte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTEn
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verification
</UL>

<P><STRONG><a name="[2d]"></a>verification</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = verification &rArr; UART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>SerialInit</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SerialInit &rArr; UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; ADC_Init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verification
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[41]"></a>low_bandwidth_filter</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = low_bandwidth_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>

<P><STRONG><a name="[13]"></a>ADC0_Handler</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ADC0_Handler &rArr; low_bandwidth_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Read
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_bandwidth_filter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UART0_Handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXFIFOFull
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTStat
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTDis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mpf662xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>fputc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
</UL>

<P><STRONG><a name="[47]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, system_mpf662xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4a]"></a>switchTo12MHz</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_mpf662xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo1M5Hz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToXTAL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo32KHz
</UL>

<P><STRONG><a name="[49]"></a>switchTo32KHz</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, system_mpf662xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo12MHz
</UL>

<P><STRONG><a name="[4b]"></a>PLLInit</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, system_mpf662xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PLLInit &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
</UL>

<P><STRONG><a name="[4c]"></a>switchToPLL</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_mpf662xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = switchToPLL &rArr; PLLInit &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLLInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo12MHz
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4d]"></a>switchToXTAL</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, system_mpf662xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo12MHz
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>

<P><STRONG><a name="[4e]"></a>switchTo1M5Hz</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, system_mpf662xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo12MHz
</UL>

<P><STRONG><a name="[32]"></a>SystemInit</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, system_mpf662xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit &rArr; switchToPLL &rArr; PLLInit &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Param_at_xMHz
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>ADC_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[34]"></a>ADC_Init</STRONG> (Thumb, 698 bytes, Stack size 24 bytes, mpf662xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ADC_Init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Close
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>ADC_Open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>ADC_Start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>ADC_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>ADC_Read</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>

<P><STRONG><a name="[54]"></a>ADC_IsEOC</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[7a]"></a>ADC_ChnSelect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>ADC_IntEOCEn</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[56]"></a>ADC_IntEOCDis</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[57]"></a>ADC_IntEOCClr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[58]"></a>ADC_IntEOCStat</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[59]"></a>ADC_IntOVFEn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[5a]"></a>ADC_IntOVFDis</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[5b]"></a>ADC_IntOVFClr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[5c]"></a>ADC_IntOVFStat</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mpf662xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>

<P><STRONG><a name="[7b]"></a>FLASH_Erase</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mpf662xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>FLASH_Write</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mpf662xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>Flash_Param_at_xMHz</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mpf662xx_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_Param_at_xMHz
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[33]"></a>GPIO_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, mpf662xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>GPIO_SetBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>GPIO_ClrBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>GPIO_InvBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>GPIO_GetBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>GPIO_SetBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>GPIO_ClrBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>GPIO_InvBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>GPIO_GetBits</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>GPIO_AtomicSetBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>GPIO_AtomicClrBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>GPIO_AtomicInvBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>GPIO_AtomicSetBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>GPIO_AtomicClrBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>GPIO_AtomicInvBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mpf662xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>PORT_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mpf662xx_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToXTAL
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLLInit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
</UL>

<P><STRONG><a name="[5d]"></a>TIMR_Stop</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, mpf662xx_timr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIMR_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[36]"></a>TIMR_Init</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, mpf662xx_timr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TIMR_Init &rArr; TIMR_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>TIMR_Start</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, mpf662xx_timr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMR_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>TIMR_Halt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>TIMR_Resume</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>TIMR_GetCurValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>TIMR_INTEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>TIMR_INTDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>TIMR_INTClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>TIMR_INTStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>TIMR_OC_Init</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, mpf662xx_timr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[92]"></a>TIMR_OC_OutputEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>TIMR_OC_OutputDis</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>TIMR_OC_SetMatch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>TIMR_OC_GetMatch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>TIMR_OC_INTEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>TIMR_OC_INTDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>TIMR_OC_INTClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>TIMR_OC_INTStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>TIMR_IC_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, mpf662xx_timr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[9a]"></a>TIMR_IC_GetCaptureH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>TIMR_IC_GetCaptureL</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>TIMR_IC_CaptureH_INTEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>TIMR_IC_CaptureH_INTDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>TIMR_IC_CaptureH_INTClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>TIMR_IC_CaptureH_INTStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>TIMR_IC_CaptureL_INTEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>TIMR_IC_CaptureL_INTDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>TIMR_IC_CaptureL_INTClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>TIMR_IC_CaptureL_INTStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>UART_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[30]"></a>UART_Init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
</UL>

<P><STRONG><a name="[31]"></a>UART_Open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialInit
</UL>

<P><STRONG><a name="[2b]"></a>UART_WriteByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>

<P><STRONG><a name="[a4]"></a>UART_ReadByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>UART_IsTXBusy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[a5]"></a>UART_IsRXFIFOEmpty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>UART_IsTXFIFOFull</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[62]"></a>UART_SetBaudrate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mpf662xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[63]"></a>UART_GetBaudrate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mpf662xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[a6]"></a>UART_CTSConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>UART_CTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>UART_RTSConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>UART_RTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>UART_LINConfig</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>UART_LINGenerate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>UART_LINIsDetected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>UART_LINIsGenerated</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>UART_ABRStart</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>UART_ABRIsDone</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>UART_INTEn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>

<P><STRONG><a name="[44]"></a>UART_INTDis</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[b0]"></a>UART_INTClr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>UART_INTStat</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mpf662xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetBaudrate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[b2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[68]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6b]"></a>_frnd</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, frnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _frnd
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[6e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[65]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[6f]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b4]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b5]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[71]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[3e]"></a>roundf</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, roundf.o(i.roundf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = roundf &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>chn2idx</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, mpf662xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntOVFStat
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntOVFClr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntOVFDis
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntOVFEn
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntEOCStat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntEOCClr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntEOCDis
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntEOCEn
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IsEOC
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Read
</UL>

<P><STRONG><a name="[5e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mpf662xx_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_IC_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_OC_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
